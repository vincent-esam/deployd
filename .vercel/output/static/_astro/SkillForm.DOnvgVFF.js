import{j as a}from"./jsx-runtime.D_zvdyIk.js";import{r as n}from"./index.Bgw4UDry.js";/* empty css                       */const k=()=>{const[c,j]=n.useState(null),[x,b]=n.useState([]),[l,u]=n.useState(null),[s,h]=n.useState([]),[p,r]=n.useState(null),[g,m]=n.useState(!1);n.useEffect(()=>{(async()=>{const t=localStorage.getItem("idDocente");if(!t){alert("No se encontr칩 el ID del docente en localStorage");return}j(Number(t)),m(!0);try{const d=await fetch(`http://localhost:4321/api/docentes/${t}`);if(!d.ok)throw new Error("Error al obtener datos del docente");const i=await d.json();b(i.habilidades_blandas||[])}catch(d){console.error("Error al obtener las habilidades blandas:",d)}finally{m(!1)}})()},[]);const f=e=>{u(e),r("edit")},y=async e=>{if(e.preventDefault(),!(!c||!l))try{if(!(await fetch("/api/skill/skillput",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({idDocente:c,habilidadesBlandas:[l]})})).ok)throw new Error("Error al actualizar la habilidad");b(d=>d.map(i=>i&&i.idHabilidadBlanda===l.idHabilidadBlanda?{...i,habilidad:l.habilidad}:i)),r(null),alert("Habilidad actualizada correctamente")}catch(t){console.error("Error al actualizar la habilidad:",t)}},H=async e=>{if(e.preventDefault(),!c||s.length===0){alert("Debe agregar al menos una habilidad v치lida.");return}try{const t=await fetch("/api/skill/skillpost",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({idDocente:c,habilidadesBlandas:s})});if(!t.ok)throw new Error("Error al agregar la nueva habilidad");const d=await t.json(),i=s.map((o,v)=>({idHabilidadBlanda:d[v],habilidad:o}));b(o=>[...o,...i]),h([]),r(null),alert("Habilidades agregadas correctamente")}catch(t){console.error("Error al agregar habilidades:",t)}};return a.jsxs("div",{className:"habilidades-manager",children:[a.jsx("h1",{children:"Gesti칩n de Habilidades Blandas"}),g?a.jsx("p",{children:"Cargando..."}):a.jsx("div",{className:"habilidades-container",children:x.filter(e=>e!==null).map(e=>a.jsxs("div",{className:"habilidad-card",children:[a.jsx("p",{children:e.habilidad}),a.jsx("button",{className:"edit-btn",onClick:()=>f(e),children:"Editar"})]},e.idHabilidadBlanda))}),a.jsx("button",{className:"add-btn",onClick:()=>r("add"),children:"Agregar Habilidades"}),p==="edit"&&l&&a.jsx("div",{className:"modal",children:a.jsxs("div",{className:"modal-content",children:[a.jsx("h2",{children:"Editar Habilidad"}),a.jsxs("form",{onSubmit:y,children:[a.jsxs("label",{children:["Habilidad:",a.jsx("input",{type:"text",value:l.habilidad,onChange:e=>u({...l,habilidad:e.target.value})})]}),a.jsxs("div",{className:"modal-actions",children:[a.jsx("button",{type:"submit",children:"Guardar"}),a.jsx("button",{type:"button",onClick:()=>r(null),children:"Cancelar"})]})]})]})}),p==="add"&&a.jsx("div",{className:"modal",children:a.jsxs("div",{className:"modal-content",children:[a.jsx("h2",{children:"Agregar Habilidades"}),a.jsxs("form",{onSubmit:H,children:[s.map((e,t)=>a.jsxs("div",{className:"new-habilidad",children:[a.jsx("input",{type:"text",value:e,onChange:d=>{const i=[...s];i[t]=d.target.value,h(i)}}),a.jsx("button",{type:"button",onClick:()=>{const d=s.filter((i,o)=>o!==t);h(d)},children:"Eliminar"})]},t)),a.jsx("button",{type:"button",onClick:()=>h([...s,""]),children:"Agregar M치s"}),a.jsxs("div",{className:"modal-actions",children:[a.jsx("button",{type:"submit",children:"Guardar"}),a.jsx("button",{type:"button",onClick:()=>r(null),children:"Cancelar"})]})]})]})})]})};export{k as default};
