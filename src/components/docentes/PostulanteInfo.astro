---
interface Pregrado {
  carrera: string;
  universidad: string;
  pais: string;
  anio: string;
  modalidad: string;
}

interface Postgrado {
  nombre: string;
  universidad: string;
  pais: string;
  anio: string;
  modalidad: string;
}
interface EstudiosS{
  tipo:string;
  universidad:string;
  carrera: string;
  fecha:string;
  nombre:string;
  pais:string;
  modalidad:string;
}
interface Cursos {
  nombre: string;
  universidad: string;
  pais: string;
  anio: string;
}

interface Postulante {
  nombres: string;
  correo: string;
  numeroDocumento:string;
  telefono: string;
  pregrado: Pregrado[];
  postgrado: Postgrado[];
  cursos: Cursos[];
  fotografia:string;
  estudiossuperiores:EstudiosS[];
}

const { postulante } = Astro.props as { postulante: Postulante };
import '../../styles/postulantesCV.css';
import '@fortawesome/fontawesome-free/css/all.min.css';
---
<div class="container">
  <div class="left-column">
    <div class="profile-pic">
      <img src={postulante.fotografia} alt="profile" />
    </div>
    <div class="icon-container">
      <h2><img src="/images/iconos/usuario (1).png" alt="User Icon" class="icon"> {postulante.nombres}</h2>
        <p> <img src="/images/iconos/carnet-de-identidad.png" alt="Address CardIcon" class="icon">{postulante.numeroDocumento}</p>
        <p> <img src="/images/iconos/pastel.png" alt="Birthday Cake Icon" class="icon"> </p>
        <p> <img src="/images/iconos/sobre-de-papel-blanco.png" alt="Email  Icon" class="icon"> {postulante.correo}</p>
        <p> <img src="/images/iconos/telefono.png" alt="Phone Icon" class="icon">{postulante.telefono}</p>
        <p> <img src="/images/iconos/genero.png" alt="Gender  Icon" class="icon"></i></p>
        <p> <img src="/images/iconos/mapa.png" alt="Map  Icon" class="icon"></i> </p>
        <p> <img src="/images/iconos/ubicacion (2).png" alt="Map Marker Icon" class="icon"></i> </p>
      </div>

  </div>

      <div class="right-column">
        <h2>Estudios Pregrado</h2>
        {postulante.estudiossuperiores && (
          <ul>
            {postulante.estudiossuperiores
              .filter((estudios) => estudios.tipo === "pregrado") // Filtrar solo los de tipo "pregrado"
              .map((estudios) => (
                <li>
                  <p><strong>Carrera:</strong> {estudios.carrera}</p>
                  <p><strong>Universidad:</strong> {estudios.universidad}</p>
                  <p><strong>País:</strong> {estudios.pais}</p>
                  <p><strong>Año:</strong> {estudios.fecha}</p>
                  <p><strong>Modalidad:</strong> {estudios.modalidad}</p>
                </li>
              ))}
          </ul>
        )}
        
        <h2>Estudios Postgrado</h2>
        {postulante.estudiossuperiores && (
          <ul>
            {postulante.estudiossuperiores
              .filter((estudios) => estudios.tipo === "postgrado") // Filtrar solo los de tipo "postgrado"
              .map((estudios) => (
                <li>
                  <p><strong>Nombre:</strong> {estudios.nombre}</p>
                  <p><strong>Universidad:</strong> {estudios.universidad}</p>
                  <p><strong>País:</strong> {estudios.pais}</p>
                  <p><strong>Año:</strong> {estudios.fecha}</p>
                  <p><strong>Modalidad:</strong> {estudios.modalidad}</p>
                </li>
              ))}
          </ul>
        )}

        <h2>Cursos</h2>
        {postulante.cursos && postulante.cursos.length > 0 && (
          <ul>
            {postulante.cursos.map((cursos) => (
              <li>
                <p><strong>Nombre:</strong> {cursos.nombre}</p>
                <p><strong>Universidad:</strong> {cursos.universidad}</p>
                <p><strong>País:</strong> {cursos.pais}</p>
                <p><strong>Año:</strong> {cursos.anio}</p>
               
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>