---
interface Pregrado {
  carrera: string;
  universidad: string;
  pais: string;
  anio: string;
  modalidad: string;
}

interface Postgrado {
  nombre: string;
  universidad: string;
  pais: string;
  anio: string;
  modalidad: string;
}
interface EstudiosS{
  tipo:string;
  universidad:string;
  carrera: string;
  fecha:string;
  nombre:string;
  pais:string;
  modalidad:string;
}
interface Cursos {
  nombre: string;
  universidad: string;
  pais: string;
  anio: string;
}
interface ExperienciasD{
  calidad:string;
  materia:string;
  concluidoEl:number;
  universidad:string;
}
interface Idiomas{
  oral:string;
  idioma:string;
  escucha:string;
  lectura:string;
  escritura:String;
}
interface ExperienciasL{
nombreEmpresa:string;
cargo:string;
ciudad:string;
fechaInicio:string;
fechaFinal:string;
pais:string;
descripcion:string;
nombreCompleto:string;
cargoR:string;
numeroContacto:string;
}
interface HabilidadesB{
  habilidad:string;
}
interface PublicacionesI{
nombre:string;
enlaceEditorial:string;
pais:string;
fecha:string;
tipoPublicacion:string;
}
interface Postulante {
  nombres: string;
  correo: string;
  numeroDocumento:string;
  telefono: string;
  pregrado: Pregrado[];
  postgrado: Postgrado[];
  cursos: Cursos[];
  fotografia:string;
  estudiosuperiores:EstudiosS[];
  experienciasdocentes:ExperienciasD[];
  idiomas:Idiomas[];
  experienciaslaborales:ExperienciasL[];
  habilidades_blandas:HabilidadesB[];
  publicacionesintelectuales:PublicacionesI[];
}

const { postulante } = Astro.props as { postulante: Postulante };
import '../../styles/postulantesCV.css';
import '@fortawesome/fontawesome-free/css/all.min.css';

---
<div class="container">
  <div class="left-column">
    <div class="profile-pic">
      <img src={postulante.fotografia} alt="profile" />
    </div>
    <div class="icon-container">
      <h2><img src="/images/iconos/usuario (1).png" alt="User Icon" class="icon"> {postulante.nombres}</h2>
        <p> <img src="/images/iconos/carnet-de-identidad.png" alt="Address CardIcon" class="icon">{postulante.numeroDocumento}</p>
        <p> <img src="/images/iconos/pastel.png" alt="Birthday Cake Icon" class="icon"> </p>
        <p> <img src="/images/iconos/sobre-de-papel-blanco.png" alt="Email  Icon" class="icon"> {postulante.correo}</p>
        <p> <img src="/images/iconos/telefono.png" alt="Phone Icon" class="icon">{postulante.telefono}</p>
        <p> <img src="/images/iconos/genero.png" alt="Gender  Icon" class="icon"></i></p>
        <p> <img src="/images/iconos/mapa.png" alt="Map  Icon" class="icon"></i> </p>
        <p> <img src="/images/iconos/ubicacion (2).png" alt="Map Marker Icon" class="icon"></i> </p>
      </div>

  </div>

      <div class="right-column">
        <h2>Estudios Pregrado</h2>
  {postulante.estudiosuperiores && postulante.estudiosuperiores.length > 0 && (
    <ul>
      {postulante.estudiosuperiores
        .filter((estudios) => estudios.tipo?.toLowerCase() === "pregrado")
        .map((estudios) => (
          <li >
            <p><strong>Carrera:</strong> {estudios.carrera}</p>
            <p><strong>Universidad:</strong> {estudios.universidad}</p>
            <p><strong>País:</strong> {estudios.pais}</p>
            <p><strong>Año:</strong> {estudios.fecha}</p>
            <p><strong>Modalidad:</strong> {estudios.modalidad}</p>
          </li>
        ))}
    </ul>
  )}

  <h2>Estudios Postgrado</h2>
  {postulante.estudiosuperiores && postulante.estudiosuperiores.length > 0 && (
    <ul>
      {postulante.estudiosuperiores
        .filter((estudios) => estudios.tipo?.toLowerCase() === "postgrado")
        .map((estudios) => (
          <li >
            <p><strong>Nombre:</strong> {estudios.nombre}</p>
            <p><strong>Universidad:</strong> {estudios.universidad}</p>
            <p><strong>País:</strong> {estudios.pais}</p>
            <p><strong>Año:</strong> {estudios.fecha}</p>
            <p><strong>Modalidad:</strong> {estudios.modalidad}</p>
          </li>
        ))}
    </ul>
  )}

        
        {postulante.cursos && postulante.cursos.length > 0 && (
          <h2>Cursos</h2>
          <ul>
            {postulante.cursos.map((cursos) => (
              <li>
                <p><strong>Nombre:</strong> {cursos.nombre}</p>
                <p><strong>Universidad:</strong> {cursos.universidad}</p>
                <p><strong>País:</strong> {cursos.pais}</p>
                <p><strong>Año:</strong> {cursos.anio}</p>
               
              </li>
            ))}
          </ul>
        )}
        
         {
           postulante.experienciasdocentes && postulante.experienciasdocentes.length > 0 && (
           <h2>Experiencias Docentes</h2>
             <ul>
               {postulante.experienciasdocentes.map((experienciasd) => (
                 <li>
                   <p>
                     <strong>Calidad:</strong> {experienciasd.calidad}
                   </p>
                   <p>
                     <strong>Materia:</strong> {experienciasd.materia}
                   </p>
                   <p>
                     <strong>Concluido:</strong> {experienciasd.concluidoEl}
                   </p>
                   <p>
                     <strong>Universidad:</strong> {experienciasd.universidad}
                   </p>
                 </li>
               ))}
             </ul>
           )
         }
          
           {
             postulante.idiomas && postulante.idiomas.length > 0 && (
             <h2>Idiomas</h2>
               <ul>
                 {postulante.idiomas.map((idiomas) => (
                   <li>
                     <p>
                       <strong>Idioma:</strong> {idiomas.idioma}
                     </p>
                     <p>
                       <strong>Oral:</strong> {idiomas.oral}
                     </p>
                     <p>
                       <strong>Escucha:</strong> {idiomas.escucha}
                     </p>
                     <p>
                       <strong>Lectura:</strong> {idiomas.lectura}
                     </p>
                     <p>
                       <strong>Escritura:</strong> {idiomas.escritura}
                     </p>
                   </li>
                 ))}
               </ul>
             )
           }
            {
              postulante.experienciaslaborales && postulante.experienciaslaborales.length > 0 && (
              <h2>Experiencia Laboral</h2>
                <ul>
                  {postulante.experienciaslaborales.map((experienciasL) => (
                    <li>
                      <p>
                        <strong>Empresa:</strong> {experienciasL.nombreEmpresa}
                      </p>
                      <p>
                        <strong>Cargo:</strong> {experienciasL.cargo}
                      </p>
                      <p>
                        <strong>Ciudad:</strong> {experienciasL.ciudad}
                      </p>
                      <p>
                        <strong>Fecha de Inicio:</strong> {experienciasL.fechaInicio}
                      </p>
                      <p>
                        <strong>Fecha Final:</strong> {experienciasL.fechaFinal}
                      </p>
                      <p>
                        <strong>Pais:</strong> {experienciasL.pais}
                      </p>
                      <p>
                        <strong>Descripcion:</strong> {experienciasL.descripcion}
                      </p>
                      <p>
                        <strong>Referencias: </strong>
                      </p>
                      <p>
                        <strong>Nombre de referencia:</strong> {experienciasL.nombreCompleto}
                      </p>
                      <p>
                        <strong>Cargo:</strong> {experienciasL.cargoR}
                      </p>
                      <p>
                        <strong>Numero:</strong> {experienciasL.numeroContacto}
                      </p>
                    </li>
                  ))}
                </ul>
              )
            }
                 {postulante.habilidades_blandas && postulante.habilidades_blandas.length > 0 && (
                  <h2>Habilidades Blandas</h2>
                  <ul>
                    {postulante.habilidades_blandas.map((habilidadesB) => (
                      <li>
                        <p><strong>Habilidad:</strong> {habilidadesB.habilidad}</p>      
                      </li>
                    ))}
                  </ul>
                )}
                 {postulante.publicacionesintelectuales && postulante.publicacionesintelectuales.length > 0 && (
                  <h2>Publicaciones Intelectuales</h2>
                  <ul>
                    {postulante.publicacionesintelectuales.map((publicacionesI) => (
                      <li>
                        <p><strong>Nombre:</strong> {publicacionesI.nombre}</p>
                        <p><strong>Enlace de editorial:</strong> {publicacionesI.enlaceEditorial}</p>
                        <p><strong>País:</strong> {publicacionesI.pais}</p>
                        <p><strong>Fecha:</strong> {publicacionesI.fecha}</p>
                        <p><strong>Tipo de publicacion:</strong> {publicacionesI.tipoPublicacion}</p>
                      </li>
                    ))}
                  </ul>
                )}
      </div>
    </div>